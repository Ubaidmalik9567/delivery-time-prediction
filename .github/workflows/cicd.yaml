name: Build CI Pipeline

on:
  push:
    branches:
      - main  
jobs:
  project-testing: # Name of the job or that could be any
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' 

      - name: Cache pip dependencies 
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install necessary project development dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run DVC pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          dvc repro
      
      - name: Test Model Registry
        env:
          DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          pytest tests/test_model_registry.py

      - name: Test Model Performance
        env:
          DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          pytest tests/test_model_perf.py

      - name: Promote Model
        if: success()
        env:
          DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          python scripts/promote_model_to_prod.py
      
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} 

      - name: Build Docker image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/delivery_time_pred_model:latest .

      - name: Push Docker image to Docker Hub
        if: success()
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/delivery_time_pred_model:latest

      - name: Deploy Image Docker Hub to EC2
        if: success()
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/delivery_time_pred_model:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -p 8000:8000 --name my-app \
            -e DAGSHUB_PAT=${{ secrets.DAGSHUB_PAT }} \
            ${{ secrets.DOCKER_HUB_USERNAME }}/delivery_time_pred_model:latest
